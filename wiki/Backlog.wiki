#summary Our plans for the future of Usus development.

= The Usus Backlog =

Technical:
  * (++) Add a Filter to exclude source folders, packages or classes from the calculations
  * (++) Try out ZEST 2.x and include it if it works well (http://wiki.eclipse.org/Zest)
  * (+) Add a decorator to the included projects?
  * (++) Let the class / package graphs display the hotspots of the selected metric? (by some kind of visual emphasis)
  * (++) Move the existing PDE tests to the new test concept (4-stage tests)

Metrics and Statistics:
  * (++) Implement the metric "Distance from the Main Sequence" described in http://en.wikipedia.org/wiki/Software_package_metrics
  * (+) Statistics: Number of "Suppress warnings"
  * (++) Statistics: Code Smells
  * (++) Statistics: Feature Envy
  * (+) Statistics: Useless Comments
  * (+++) ACD: Identify interface and implementation - represent RealACD: a statistics without obfuscation
  * (++) Cohesion statistics mix all kinds of references. We want to distinguish them.
    * Parameter should not be regarded as a reference
    * Attribute holding state is a reference
    * Implement multiple ACD statistics and see how the networks behave.
  * Currently, the Yellow-Count is stored in its own data structure (one result value per project). It would be nice to have the Yellow-Count in the rawdata structure, just as the other metrics results. Additionally, one could store one yellow-count result value per file.

Visualizations:
  * (+++) LCOM-Metric and visualization: (http://docs.codehaus.org/display/SONAR/LCOM4+-+Lack+of+Cohesion+of+Methods)
    * Invocation of a method from another method
    * Access to a field from a method
    * Visualization: Inside one class / crossing a class boundary
  * (++) Determine the "thickness" of a connection between two packages / classes / methods
  * (++) Visualization of the above
  * (++) Determine which edges of a cycle can be removed in order to resolve the cycle (this seems to be the minimum feedback arc set problem: http://en.wikipedia.org/wiki/Feedback_arc_set )
  * (+++) Visualization of the above

Automated Refactorings:
  * (+++) Refactoring: "Remove useless comments" (should this only remove the useless ones or any?)
  * (+++) Refactoring: Move Feature Envy code to the place it belongs.