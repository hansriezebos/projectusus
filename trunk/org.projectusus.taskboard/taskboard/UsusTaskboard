- Namensgebung geradeziehen: Kind -> Metrics. Was noch?

- Null-Objekte in die RawData-Hierarchie einführen.

- Violations: Linear statt konstant.

- Packagenamen überall mit Eclipse Appearance Regeln darstellen (Package View, Hotspots, ...).

- Cockpit: Ein Trend-Pfeil pro Metrik.
           Werte sein letztem CheckIn / CheckOut? Oder seit dem Start? Oder mit Reset-Button?
           Dazu Level sehr exakt bestimmen.

- Berechnungsalgorithmen für die Violations pluggable machen. Dazu Implementierung eines 
  Visitor-Collectors, der den RawData Baum besucht und sich aus allen Knoten das Gewünschte
  zusammensucht: Hotspots, Violations, Metrikwerte etc.

- UsusModel: Berechnung abbrechen, wenn der Benutzer dies verlangt. Danach voller Rebuild.

- ZEST Layouting verbessern.

- Aggregierte Hotspots = "Schlammlöcher"

- Metriken pluggable machen: Collectors zufügen, Werte in RawData Struktur werden in einer Map
  gehalten, pro Metrik ein gespeichertes Werteobjekt.

- Metriken: # SuppressWarnings
            Code Smells
            Feature Envy
            Useless Comments
            Klassenzyklen innerhalb / zwischen Paketen

- RealACD ("Metriken ohne Augenwischerei"): Interface und Implementierung unifizieren.

- Kohäsionsmetriken werfen alle Arten von Referenzen in einen Topf. Unterscheiden!
   - Parameter sind keine Referenzen in unserem Sinne
   - Attribute, die State machen, schon.
   Verschiedene ACD-Klassen machen und schauen, wie sich die Geflechte verhalten.            

- DependencyGraph: Man kann ausgewählte Knoten aus den Graphen entfernen

- PackageView: Packages auswählen, die enthaltenen Klassen im Class View darstellen

- Wertehistorie: Verbesserte und verschlechterte Werte ausweisen und danach sortieren.

- Doku: Warum soll ich meinen Code ändern? Wo kann ich weiterlesen?
- Position Paper: Usus vs. Checkstyle, PMD, ...

- CheatSheet reparieren und erweitern

- Hotspots für YellowCount am Projekt
- Hotspots für Package Cycles?? Hotspot ^=^ Zyklus-Objekt. Relevant: # Packages im Zyklus


- Schatten am InfoPresenter (extra für Marc :-)

- Projektaktivierung in den Project Prefs statt in einem eigenen View?
  Decorator am Projekt. Eigene Nature zufügen.
  
- Refactorings einbauen: Feature Envy Code an die richtige Stelle verschieben.

- "Remove useless comments" entfernt alle nutzlosen Kommentare (oder alle? ;-)

- Graph Views: Canceln eines wartenden Updates (durch Verschieben des Sliders ausgelöst)?