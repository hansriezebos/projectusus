Paketzyklen

Eine Java-Besonderheit gilt es zu beachten: Pakete korrespondieren nicht mit
einem Verzeichnis im Dateisystem, sondern ein Paket kann aus Klassen in mehreren
Verzeichnissen bestehen. Betrachtet man eins dieser Verzeichnisse für sich genommen,
liegt kein Paketzyklus vor, aber beim Betrachten mehrerer Verzeichnisse entstehen
Zyklen. Dies passiert häufig, wenn Testcode in dieselbe Paketstruktur
gegliedert wird wie der zugehörige Produktivcode oder wenn mehrere Projekte
gleichnamige Pakete enthalten.
Um derartige Zyklen zu vermeiden, hat sich das Umbenennen der Pakete als hilfreich
erwiesen.

Im Folgenden gilt alles, was sich auf Methoden bezieht, genauso auch für Konstruktoren und Initializer. Wir
verzichten auf die Doppelnennung zugunsten der Lesbarkeit des Textes.

Damit Usus zum Einsatz kommen kann, müssen die zu 
untersuchenden Projekte festgelegt werden. Dazu öffnet man die Usus-Perspektive und dort die View 
*Projects covered by Usus*. Hier können Projekte zur Usus-Analyse hinzugefügt und wieder entfernt 
werden. Nach dem Zufügen eines Projekts muss die Neuberechnung durch Drücken des Refresh-Buttons im 
Usus Cockpit angestoßen werden. Diese Einstellungen werden in den Workspace Settings gespeichert, 
daher sind in unserem Beispiel-Workspace schon alle relevanten Projekte aktiviert.

Zunächst muss Usus von der Update Site <http://projectusus.googlecode.com/svn/updates/> installiert 
und der Workspace in Eclipse geöffnet werden. 
